# Generate all.hpp for the source_dir and recurse down the path
function(generate_dir_headers source_dir binary_dir)
    set(children_hpp "")
    set(children_dir "")
    set(children_all "")
    file(GLOB children_hpp RELATIVE ${source_dir} "${source_dir}/*.hpp")
    list(FILTER children_hpp EXCLUDE REGEX "all.hpp")
    file(GLOB children_dir RELATIVE ${source_dir} "${source_dir}/*")
    list(FILTER children_dir EXCLUDE REGEX "^\\..*")
    foreach(child ${children_hpp})
        list(APPEND children_all "${source_dir}/${child}")
    endforeach()
    foreach(child ${children_dir})
        if (IS_DIRECTORY "${source_dir}/${child}")
            list(APPEND children_all "${source_dir}/${child}/all.hpp")
            # Recurse down this subpath
            generate_dir_headers("${source_dir}/${child}" "${binary_dir}/${child}")
        endif()
    endforeach()
    if (children_all)
        file(WRITE "${binary_dir}/all.hpp"
            "/* This file is automatically generated; do not edit. */\n\n")
        foreach(child ${children_all})
            file(RELATIVE_PATH all_path ${SOURCE_DIR} ${child})
            file(APPEND "${binary_dir}/all.hpp" "#include <${all_path}>\n")
        endforeach()
    endif()
endfunction()

# Call generate_dir_headers for each directory at this top level (ql/)
function(generate_all_headers source_dir binary_dir)
    file(GLOB children RELATIVE ${source_dir} "${source_dir}/*")
    list(FILTER children EXCLUDE REGEX "^\\..*")
    foreach(child ${children})
        if (IS_DIRECTORY "${source_dir}/${child}")
            generate_dir_headers("${source_dir}/${child}" "${binary_dir}/${child}")
        endif()
    endforeach()
endfunction()

# Entry point
generate_all_headers("${SOURCE_DIR}/ql" "${BINARY_DIR}/ql")
